import { test, expect } from '@playwright/test';
// experiment using playwright code gen
test('test', async ({ page }) => {
  await page.goto('https://mrjohn5on.github.io/supernova.html');
  await expect(page.locator('h1')).toContainText('Supernova Internship Test Report');
  await expect(page.getByRole('banner')).toBeVisible();
  await expect(page.locator('#introduction')).toContainText('Introduction');
  await expect(page.locator('li').filter({ hasText: 'I’m excited to share that I’' }).getByRole('link')).toBeVisible();
  await expect(page.getByRole('link', { name: 'Daniel Tifft' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Myrrh Rachel Hsu' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Kristiana Kaila Ingco' }).first()).toBeVisible();
  await expect(page.getByRole('link', { name: 'Ray Grigolla' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Michael Reasoner' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Jezer Medina' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Refat Ullah' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Prashant Vaghela' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Jonathan Cost' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'charter testing' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'session-based testing' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Supernova MGU' }).nth(1)).toBeVisible();
  await expect(page.getByRole('link', { name: 'TripleTen' })).toBeVisible();
  await expect(page.getByRole('img', { name: 'Internship Certificate' })).toBeVisible();
  await expect(page.locator('#tester-info')).toContainText('Tester Information');
  await expect(page.locator('#tester-info')).toContainText('Name: Ryley Johnson');
  await expect(page.locator('#tester-info')).toContainText('Date: Aug-Oct 2024');
  await expect(page.locator('#video-demonstration')).toContainText('Video Demonstration');
  await page.frameLocator('iframe[title="YouTube video player"]').getByLabel('Play', { exact: true }).click();
  await expect(page.frameLocator('iframe[title="YouTube video player"]').locator('video')).toBeVisible();
  await expect(page.locator('#video-demonstration')).toContainText('Disclaimer: Some scenes in this video have been blurred/redacted to maintain privacy.');
  await expect(page.locator('#focus-areas')).toContainText('Focus Areas');
  await expect(page.getByText('cal_carrier_remmitance', { exact: true })).toBeVisible();
  await expect(page.getByText('ping', { exact: true })).toBeVisible();

  await expect(page.getByRole('cell', { name: 'Component' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Component');
  await expect(page.getByRole('cell', { name: 'Total Tests' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Total Tests');
  await expect(page.getByRole('cell', { name: 'Passed' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Passed');
  await expect(page.getByRole('cell', { name: 'Failed' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Failed');
  await expect(page.getByRole('cell', { name: 'Bugs Found' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Bugs Found');
  await expect(page.getByRole('cell', { name: 'Cal_carrier_remmitance' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Cal_carrier_remmitance');
  await expect(page.getByRole('cell', { name: 'Ping' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Ping');
  await expect(page.getByRole('cell', { name: 'Leads Management/Kanban Board' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Leads Management/Kanban Board');
  await expect(page.getByRole('cell', { name: 'Mobile UI' })).toBeVisible();
  await expect(page.getByRole('rowgroup')).toContainText('Mobile UI');
  await expect(page.getByRole('heading', { name: 'Detailed Test Analysis' })).toBeVisible();
  await expect(page.locator('#detailed-test-analysis')).toContainText('Detailed Test Analysis');
  await expect(page.locator('#detailed-test-analysis').getByText('carrier_id')).toBeVisible();
  await expect(page.getByText('transaction_date').first()).toBeVisible();
  await expect(page.locator('pre')).toBeVisible();
  await expect(page.locator('pre')).toContainText('"error"');
  await expect(page.locator('pre')).toContainText('"stackTrace"');
  await expect(page.getByRole('link', { name: 'Home Page' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Project Bank' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'ryleyjohnsonemail@gmail.com' })).toBeVisible();
  await page.getByRole('link', { name: 'Home Page' }).click();
  await expect(page.getByRole('main')).toBeVisible();

});